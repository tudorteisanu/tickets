{
    "root": true,
    "parserOptions": {
        "ecmaVersion": 6
    },
    "ignorePatterns": [
        "projects/**/*"
    ],
    "rules": {
        "quotes": [
            "error",
            "single"
        ],
        "max-len": [
            "error",
            {
                "code": 120,
                "ignoreStrings": true
            }
        ]
    },
    "overrides": [
        {
            "files": [
                "*.ts"
            ],
            "parserOptions": {
                "project": [
                    "tsconfig.json"
                ],
                "createDefaultProgram": true
            },
            "extends": [
                "eslint:recommended",
                "plugin:@typescript-eslint/recommended",
                "plugin:@angular-eslint/recommended",
                "plugin:@angular-eslint/template/process-inline-templates"
            ],
            "rules": {
                "no-multiple-empty-lines": [
                    "error",
                    {
                        "max": 1
                    }
                ],
                "newline-per-chained-call": [
                    "error",
                    {
                        "ignoreChainWithDepth": 2
                    }
                ],
                "indent": "off",
                "@typescript-eslint/indent": [
                    "error",
                    2
                ],
                "padding-line-between-statements": [
                    "error",
                    {
                        "blankLine": "always",
                        "prev": "*",
                        "next": "return"
                    },
                    {
                        "blankLine": "always",
                        "prev": [
                            "case",
                            "default"
                        ],
                        "next": "*"
                    },
                    {
                        "blankLine": "always",
                        "prev": "*",
                        "next": "block"
                    },
                    {
                        "blankLine": "always",
                        "prev": "block",
                        "next": "*"
                    },
                    {
                        "blankLine": "always",
                        "prev": "*",
                        "next": "block-like"
                    },
                    {
                        "blankLine": "always",
                        "prev": "block-like",
                        "next": "*"
                    }
                ],
                "semi": [
                    "error",
                    "always"
                ],
                "padded-blocks": [
                    "error",
                    "never"
                ],
                "@typescript-eslint/member-ordering": [
                    "error"
                ],
                "@typescript-eslint/explicit-member-accessibility": [
                    "error",
                    {
                        "overrides": {
                            "accessors": "ex",
                            "constructors": "off",
                            "methods": "off",
                            "properties": "off",
                            "parameterProperties": "explicit"
                        },
                        "ignoredMethodNames": [
                            "ngOnInit"
                        ]
                    }
                ],
                "@typescript-eslint/method-signature-style": "error",
                "@typescript-eslint/no-confusing-non-null-assertion": "error",
                "@typescript-eslint/no-confusing-void-expression": "error",
                "@typescript-eslint/array-type": "error",
                "@typescript-eslint/explicit-function-return-type": "error",
                "@typescript-eslint/consistent-type-assertions": "error",
                "@typescript-eslint/no-duplicate-enum-values": "error",
                "@typescript-eslint/no-duplicate-type-constituents": "error",
                "@typescript-eslint/no-explicit-any": "error",
                "@typescript-eslint/no-extra-non-null-assertion": "error",
                "@typescript-eslint/no-floating-promises": [
                    "warn",
                    {
                        "ignoreVoid": true
                    }
                ],
                "@typescript-eslint/no-import-type-side-effects": "error",
                "@typescript-eslint/no-invalid-void-type": "error",
                "@typescript-eslint/no-misused-promises": "error",
                "@typescript-eslint/no-mixed-enums": "error",
                "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
                "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "error",
                "@typescript-eslint/no-redundant-type-constituents": "error",
                "@typescript-eslint/no-require-imports": "error",
                "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
                "@typescript-eslint/no-unnecessary-condition": "error",
                "@typescript-eslint/no-unnecessary-type-assertion": "error",
                "@typescript-eslint/no-unnecessary-type-constraint": "error",
                "@typescript-eslint/no-unsafe-enum-comparison": "error",
                "@typescript-eslint/prefer-as-const": "error",
                "@typescript-eslint/prefer-for-of": "error",
                "@typescript-eslint/prefer-includes": "error",
                "@typescript-eslint/prefer-string-starts-ends-with": "error",
                "@typescript-eslint/restrict-plus-operands": "error",
                "@typescript-eslint/switch-exhaustiveness-check": "error",
                "@angular-eslint/directive-selector": [
                    "error",
                    {
                        "type": "attribute",
                        "style": "camelCase"
                    }
                ],
                "@angular-eslint/component-selector": [
                    "error",
                    {
                        "type": "element",
                        "style": "kebab-case"
                    }
                ],
                "no-unused-vars": "off",
                "@typescript-eslint/no-unused-vars": [
                    "error",
                    {
                        "argsIgnorePattern": "^_"
                    }
                ],
                "@angular-eslint/no-conflicting-lifecycle": [
                    "error"
                ],
                "@angular-eslint/no-empty-lifecycle-method": [
                    "error"
                ],
                "@angular-eslint/no-host-metadata-property": [
                    "error"
                ],
                "@angular-eslint/no-input-prefix": [
                    "error",
                    {
                        "prefixes": [
                            "on"
                        ]
                    }
                ],
                "@angular-eslint/use-pipe-transform-interface": [
                    "error"
                ],
                "@angular-eslint/no-input-rename": [
                    "error"
                ],
                "@angular-eslint/no-inputs-metadata-property": [
                    "error"
                ],
                "@angular-eslint/no-output-native": [
                    "error"
                ],
                "@angular-eslint/no-output-rename": [
                    "error"
                ],
                "@angular-eslint/no-outputs-metadata-property": [
                    "error"
                ],
                "@angular-eslint/no-pipe-impure": [
                    "error"
                ],
                "@angular-eslint/no-output-on-prefix": [
                    "error"
                ],
                "@angular-eslint/prefer-output-readonly": [
                    "error"
                ],
                "@angular-eslint/relative-url-prefix": [
                    "error"
                ],
                "@angular-eslint/use-lifecycle-interface": [
                    "error"
                ],
                "@typescript-eslint/no-empty-interface": [
                    "error",
                    {
                        "allowSingleExtends": false
                    }
                ],
                "@typescript-eslint/naming-convention": [
                    "error",
                    {
                        "selector": "default",
                        "format": [
                            "camelCase"
                        ],
                        "leadingUnderscore": "allow",
                        "trailingUnderscore": "allow"
                    },
                    {
                        "selector": "variable",
                        "format": [
                            "camelCase",
                            "UPPER_CASE"
                        ],
                        "leadingUnderscore": "allow",
                        "trailingUnderscore": "allow"
                    },
                    {
                        "selector": "variable",
                        "types": [
                            "function"
                        ],
                        "format": [
                            "PascalCase",
                            "camelCase"
                        ]
                    },
                    {
                        "selector": "function",
                        "format": [
                            "camelCase",
                            "UPPER_CASE"
                        ]
                    },
                    {
                        "selector": "classMethod",
                        "format": [
                            "camelCase"
                        ]
                    },
                    {
                        "selector": "parameter",
                        "format": [
                            "camelCase",
                            "PascalCase"
                        ],
                        "leadingUnderscore": "allow",
                        "trailingUnderscore": "allow"
                    },
                    {
                        "selector": "objectLiteralMethod",
                        "format": [
                            "camelCase",
                            "UPPER_CASE"
                        ]
                    },
                    {
                        "selector": "objectLiteralProperty",
                        "format": [
                            "camelCase",
                            "PascalCase"
                        ]
                    },
                    {
                        "selector": "enumMember",
                        "format": [
                            "PascalCase"
                        ]
                    },
                    {
                        "selector": "typeLike",
                        "format": [
                            "PascalCase"
                        ]
                    },
                    {
                        "selector": "interface",
                        "format": [
                            "PascalCase"
                        ],
                        "suffix": [
                            "Interface"
                        ]
                    }
                ]
            }
        },
        {
            "files": [
                "*.html"
            ],
            "extends": [
                "plugin:@angular-eslint/template/recommended",
                "plugin:@angular-eslint/template/accessibility"
            ],
            "rules": {
                "no-multiple-empty-lines": [
                    "error",
                    {
                        "max": 0
                    }
                ],
                "max-statements-per-line": [
                    "error",
                    {
                        "max": 1
                    }
                ],
                "@angular-eslint/template/use-track-by-function": [
                    "error"
                ],
                "@angular-eslint/template/no-interpolation-in-attributes": [
                    "error"
                ],
                "@angular-eslint/template/no-inline-styles": [
                    "error"
                ],
                "@angular-eslint/template/no-duplicate-attributes": [
                    "error"
                ],
                "@angular-eslint/template/eqeqeq": [
                    "error"
                ],
                "@angular-eslint/template/banana-in-box": [
                    "error"
                ],
                "@angular-eslint/template/attributes-order": [
                    "error"
                ],
                "@angular-eslint/template/click-events-have-key-events": "off",
                "@angular-eslint/template/interactive-supports-focus": "off"
            }
        }
    ]
}